# Bilibili 动态推送插件配置

[monitor]
# 是否启用本插件总开关。
enable = true

# 轮询间隔（分钟）。过小易被风控，建议 ≥3
interval_minutes = 1               

# 轮询抖动（秒），防止多个实例同秒访问
jitter_seconds = 15

# 静默模式。true 时仅打印错误日志，屏蔽普通日志
silent = true   

# 启动“冷静期”（分钟）：插件刚启动时，如果最近一条动态发布时间早于该阈值，则只记录不推送，避免冷启动刷旧动态
ignore_history_minutes_on_boot = 10  

[image]
# 是否发送图片（图集/封面等）。false 则只发文字+链接
send_images = true 

# 发图优先使用 Base64（Napcat 更稳）。false 则优先直链
force_base64 = true   

# Base64 数据大小上限（字节）。过大可能被风控或适配器拒绝
base64_chunk_limit = 4200000 

# 发图前的限宽（像素）。较大图片会按等比缩小到此宽度
downscale_width = 1080  

# 发图转 JPG 时的质量（1-100）。越大越清晰也越大
jpeg_quality = 95 

# 连续多张图片的发送间隔（毫秒），避免频率过高
per_image_delay_ms = 1600  

# 开启多图禁发（默认 false）
skip_many_images = false

# 触发阈值：当图片数 ≥ 该值时不发图 （记得把skip_many_images设置为true）
skip_many_images_threshold = 4  

# 触发时追加在文本里的提示语
skip_many_images_text = "【图片数量较多，请去原动态查看】" 

[api]
# B 站 API 基地址，一般不改
base_url = "https://api.bilibili.com"

# 单次请求超时（秒）
timeout = 10  

# 优先使用旧接口(space_history)获取动态；若失败再试新接口。未登录或风控时旧接口更稳
prefer_old = true                   

[bilibili]
# 推荐写法：routes（可以配置多组 UID→群号 的路由）
# “uids”为要监控的 UP 主 UID 列表；“groups”为要推送到的 QQ 群号列表（字符串）
routes = [
  { uids = ["114514", "1919810"], groups = ["10001", "10002"] },  # 例：两个 UID 的动态推送到两个群
  { uids = ["777777"],            groups = ["10001"] },           # 例：单个 UID 推送到一个群
]

# 兼容旧写法（与 routes 二选一；若两者同时写，插件会把旧写法的 UID 也并入路由）：
# uids = ["123456"]               # 旧：所有这些 UID 的动态
# groups = ["10001"]              # 旧：统一推送到这些群

# 整条 Cookie（单行、同一账号）。用于避免 -352 风控并解析昵称  ⚠️ 请粘贴浏览器里完整的 Cookie 片段，不要分多行
cookie = ""  
                                                            
[fallback]
# 旧/新接口都失败时，尝试解析空间 HTML 作为最后兜底（可能拿不到准确时间）
enable_html = true                

[debug]
# 是否把解析后的数据落盘到 debug 目录（定位“无文字内容”等问题）
dump_json = false   

# 仅对这些 UID 落盘；留空表示对全部 UID 生效（当 dump_json = true 时）
dump_uid = [] 

# 自定义调试输出目录。留空则默认为插件目录下的 debug/
output_dir = ""                   



